{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2RAoCeA,MA/Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAClB,OACE,oBAAIL,UAAU,gBAAd,SACGI,GADgCC,QAMzC,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC4COC,G,kNA1DbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAOAC,IAAMC,IACd,yDARQ,gBAKEJ,EALF,EAIRK,KACEA,KAAQL,OAKZM,QAAQC,IAAIP,GAKZ,EAAKQ,SAAS,CAAER,OAAQA,EAAQD,WAAW,IAfjC,2C,uDAkBZ,WACEU,KAAKR,c,oBAGP,WACE,MAA8BQ,KAAKX,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,sCAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACiB,GACX,OAEE,aADA,CACC,EAAD,CAEEC,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,QANTqB,EAAMC,e,GA1CXE,IAAMC,YCFxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a23ba00d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\n// image 태그에 title 속성을 쓰면 마우스 올렸을 때 해당 제목이 보인다.\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"genres\">\r\n          {genres.map((genre, index) => {\r\n            return (\r\n              <li className=\"genres__genre\" key={index}>\r\n                {genre}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\n// App은 React의 Component로부터 모든 것을 물려받고(상속), 기능을 확장\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    // 겹겹이 싸여 있는 객체 안에 movie라는 프로퍼티를 저런 식으로 가져올 수 있음.(ES6 문법)\n    // 저것을 변수로써 쓴다는 것. 굳이 moview.data.data.movies 이렇게 안 해도 되니까 엄청 편해진 것임\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      'https://yts.mx/api/v2/list_movies.json?sort_by=rating'\n    );\n    console.log(movies); // 영화 20개 아주 잘 가져옴\n    // 이제 이 영화들을 object 형태로 잘 가져왔으니 state의 배열 안에 잘 넣어주면 된다.\n    // 첫 번째는 당연히 state 내부에 있는 movies이고 두 번쨰 movies는 영화들이 담겨 있는 변수 movies이다.\n    // 근데 한 개만 써도 알아듣는다고는 한다. 왜인지 궁금.\n    // movies의 상태뿐만 아니라 isLoading의 상태 또한 바꿔준다. 로딩이 끝났기 때문\n    this.setState({ movies: movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...🎬</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              return (\n                // props들도 전해줘야 한다.\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}